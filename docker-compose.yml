# docker-compose.yml
version: '3.8'

# Tanımlanan servisler (uygulamanızın parçaları)
services:
  # Backend servisi
  backend:
    # Backend imajını ./backend klasöründeki Dockerfile'dan oluştur
    build: ./backend
    # Kapsayıcıdaki 5000 portunu ana makinedeki 5000 portuna yönlendir
    ports:
      - "5000:5000"
    # Ana makinedeki ./backend klasörünü kapsayıcıdaki /app dizinine bağla
    # Bu sayede kod değişiklikleri anında yansır
    volumes:
      - ./backend:/app
    # Backend'in başlamadan önce veritabanının (db) başlamasını bekle
    depends_on:
      - db
    # Ortam değişkenlerini backend/.env dosyasından yükle
    # Bu, hassas bilgileri docker-compose.yml'den ayrı tutmanın güvenli yoludur.
    env_file:
      - ./backend/.env
    # Uygulamayı başlatmak için npm start komutunu çalıştır
    command: npm start

  # Frontend servisi
  frontend:
    # Frontend imajını ./frontend klasöründeki Dockerfile'dan oluştur
    build: ./frontend
    # Kapsayıcıdaki 5173 portunu ana makinedeki 5173 portuna yönlendir
    ports:
      - "5173:5173"
    # Ana makinedeki ./frontend klasörünü kapsayıcıdaki /app dizinine bağla
    volumes:
      - ./frontend:/app
    # Frontend'in başlamadan önce backend'in başlamasını bekle
    depends_on:
      - backend

  # Veritabanı servisi (MongoDB)
  db:
    # MongoDB 4.4 imajını kullan
    image: mongo:4.4
    # Kapsayıcıdaki 27017 portunu ana makinedeki 27017 portuna yönlendir
    ports:
      - "27017:27017"
    # MongoDB verilerini kalıcı hale getirmek için volume kullan
    volumes:
      - mongodb_data:/data/db

# Tanımlanan volume'ler
volumes:
  # MongoDB verileri için bir volume oluştur
  mongodb_data: